<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Nateriver's Blog]]></title>
  <subtitle><![CDATA[Learning and Thinking]]></subtitle>
  <link href="nateriver520.github.io/atom.xml" rel="self"/>
  <link href="nateriver520.github.io"/>
  <updated>2013-10-13T14:25:15.105Z</updated>
  <id>nateriver520.github.io/</id>
  <author>
    <name><![CDATA[Shuo Yang]]></name>
    <email><![CDATA[shuo.yang@yahoo.com]]></email>
  </author>
  <generator uri="http://zespia.tw/hexo">Hexo</generator>
  <entry>
    <title type="html"><![CDATA[Memcached 使用与简单监测]]></title>
    <link href="nateriver520.github.io/2013/10/13/memcached-使用与简单检测/"/>
    <id>nateriver520.github.io/2013/10/13/memcached-使用与简单检测/</id>
    <published>2013-10-13T06:35:18.000Z</published>
    <updated>2013-10-13T14:25:07.000Z</updated>
    <content type="html"><![CDATA[<h2>Introduce</h2>
<p><a href="http://memcached.org/" target="_blank">Memcached</a>作为一个高并发内存Cached系统被很多大公司使用，最近也一直在用Memcached做项目也积累了一些相关经验。</p>
<p>本篇博文主要记录Memcached的一些基本使用和简单的Monitor</p>
<h2>Install</h2>
<p>Memcached的安装很简单，在Ubuntu下面一行命令搞定。</p>
<figure class="highlight lang-Shell"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>su<span class="operator"><span class="keyword">do</span> apt-<span class="keyword">get</span> install memcached
</pre></td></tr></table></figure>

<a id="more"></a>

<h2>Start</h2>
<p>实际使用的时候，memcached需要调整内存大小和端口号等命令，则启动的使用时用以下的Command就行。</p>
<figure class="highlight lang-Shell"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="comment">/usr/local/bin/memcached</span> <span class="literal">-</span><span class="comment">p</span> <span class="comment">11211</span> <span class="literal">-</span><span class="comment">m</span> <span class="comment">64m</span> <span class="literal">-</span><span class="comment">d
</pre></td></tr></table></figure>

<ul>
<li>-p 指定端口号</li>
<li>-m 指定内存大小</li>
<li>-d 作为daemon在后台启动</li>
<li>如果想trouble shotting 则加 -vv</li>
</ul>
<h2>Test</h2>
<p>Test也很简单，安装官网的命令就行</p>
<figure class="highlight lang-Shell"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="title">telnet</span> localhost <span class="number">11211</span>
</pre></td></tr></table></figure>

<p>里面就能Get和Set了。</p>
<h2>Use in Java</h2>
<p>由于项目是java的，所以以java为例子来介绍Java下Memcached的使用。</p>
<p>Java下Memcached的客户端很多，这里介绍spymemcached</p>
<p>spymemcached的使用很简单，在maven项目下面，我们加入如下依赖。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">dependency</span>&gt;</span>
    <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>net.spy<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span>
    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>spymemcached<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span>
    <span class="tag">&lt;<span class="title">version</span>&gt;</span>2.9.1<span class="tag">&lt;/<span class="title">version</span>&gt;</span>
<span class="tag">&lt;/<span class="title">dependency</span>&gt;</span>
</pre></td></tr></table></figure>

<p>这样我们就能对Memcached操作了。</p>
<figure class="highlight lang-Java"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="code"><pre>
<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Memcached</span> {</span>

    <span class="keyword">private</span> <span class="keyword">static</span> MemcachedClient MEMCACHED_CLIENT;

    <span class="keyword">static</span> {
        <span class="keyword">try</span> {
            MEMCACHED_CLIENT = <span class="keyword">new</span> MemcachedClient(
                    AddrUtil.getAddresses(<span class="string">"localhost1:11211 localhost2:11211"</span>));
        } <span class="keyword">catch</span> (Exception e) {
            System.err.println(<span class="string">"Cannot init MEMCACHED Memcached Client"</span>);
        }
    }

    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> set(String key, String value，Integer expireTime ) <span class="keyword">throws</span> Exception {
        MEMCACHED_CLIENT.set(key, expireTime, value);
    }

    <span class="keyword">public</span> <span class="keyword">static</span> String get(String key) <span class="keyword">throws</span> Exception {
        Object value = MEMCACHED_CLIENT.get(key);
        <span class="keyword">if</span> (<span class="keyword">null</span> != value)
            <span class="keyword">return</span> value.toString();
        <span class="keyword">return</span> <span class="keyword">null</span>;
    }

}
</pre></td></tr></table></figure>

<h2>Monitor</h2>
<p>我们可以通过以下简单的命令得知Memcached的运行状况,以此为扩充可以实现简单的Memcached检测shell。</p>
<figure class="highlight lang-Shell"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>  <span class="title">watch</span> <span class="string">"echo stats | nc 127.0.0.1 11211"</span>
</pre></td></tr></table></figure>

<h2>Conclusion</h2>
<p>Memcached实际使用下来简单易用，各个平台上面也有相应的Client.</p>
<p>但有时高并发可能会出现Timeout的情况，导致缓冲没办法命中的情况，具体原因还需要进一步调查。</p>
<p>Memcahed的作者最近用Go语言去写了<a href="https://github.com/golang/groupcache" target="_blank">groupcache</a>很值得关注。</p>
]]></content>
    <category scheme="nateriver520.github.io/tags/Memcached/" term="Memcached"/>
    <category scheme="nateriver520.github.io/tags/Java/" term="Java"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[New Start]]></title>
    <link href="nateriver520.github.io/2013/10/13/new-start/"/>
    <id>nateriver520.github.io/2013/10/13/new-start/</id>
    <published>2013-10-12T17:19:09.000Z</published>
    <updated>2013-10-13T07:29:05.000Z</updated>
    <content type="html"><![CDATA[<p>一直以来自己都没有记录的习惯，平常最多在evernote上记录些重要的信息。</p>
<p>后来读了一篇blog说整理知识的重要性才恍然大悟，一直以来自己都是试图让一门技术快速上手，而记录的很少，等时间一久，很多用过的东西就忘记了。</p>
<p>比如之前在EMC实习时写过很长时间的python，现在也忘记的七七八八。再加上自己在新的公司入职快6个月，各种新的信息铺面而来，更需要整理和提炼。</p>
<p>So 自己做了以下几个方面试图补救以前不爱记录，不爱整理的坏习惯。</p>
<ul>
<li>整理自己的evernote笔记 (70%)</li>
<li>建立自己code snippet  (100%)</li>
<li>在github上建立自己算法练习project (100%)</li>
</ul>
<a id="more"></a>

<p>接下来的目标是：</p>
<ul>
<li>每周整理一次自己的笔记心得</li>
<li>每个月出一篇blog</li>
<li>每周写算法</li>
</ul>
]]></content>
    <category scheme="nateriver520.github.io/tags/Life/" term="Life"/>
  </entry>
</feed>
